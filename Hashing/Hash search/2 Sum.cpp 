vector<int> Solution::twoSum(const vector<int> &A, int B) {
    map<int, vector<int> > idx;
    vector<int> v;
    for( int i = 0; i < A.size(); i++ ){
        if( idx[A[i]].size() < 2 ){
            idx[A[i]].push_back(i);
        }
    }
    for( int i = 0; i < A.size(); i++ ){
        int req = B - A[i];
        vector<int> temp;
        if( idx.count(req) > 0 ){
            temp.push_back(i);
            if( req == A[i] ){
                if( idx[req].size() == 2 ){
                    temp.push_back(idx[req][1]);
                }
            }
            else{
                temp.push_back(idx[req][0]);
            }
        }
        sort( temp.begin(), temp.end());
        if( v.empty() )v = temp;
        else if( temp.size() == 2 ){
            if( v[1] == temp[1] ){
                if( temp[0] < v[0] ){
                    v = temp;
                }
            }
            else if( temp[1] < v[1]){
                v = temp;
            }
        }
    }
    for( int i = 0; i < v.size(); i++ )v[i]++;
    return v;
}
